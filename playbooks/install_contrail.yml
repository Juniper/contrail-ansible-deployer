# orchestrator MUST be passed as a command line argument like so:
#
# ansible-playbook -i inventory/ -e orchestrator=openstack playbook/install_contrail.yml
#
- name: Create container host group and evaluate variables for Contrail
  hosts: localhost
  connection: local
  gather_facts: no
  pre_tasks:
    - name: Expose instances
      set_fact:
          instances: "{{ instances }}"
      when: hostvars['localhost']['instances'] is undefined
    - name: Expose global configuration
      set_fact:
          global_configuration: "{{ global_configuration }}"
      when: hostvars['localhost']['global_configuration'] is undefined
  roles:
    - create_container_host_group
    - build_node_lists
    - set_global_variables
    - set_contrail_variables
    - set_k8s_variables
  vars_files:
    - "{{ config_file }}"
  tags: always

- name: Get kubemanager token
  hosts: k8s_master
  gather_facts: yes
  roles:
    - get_kubemanager_token
  tags: k8s

- name: Install Contrail
  hosts: container_hosts
  gather_facts: yes
  roles:
    - install_contrail
  vars:
    - contrail_configuration: "{{ hostvars['localhost'].contrail_configuration }}"
    - global_configuration: "{{ hostvars['localhost'].global_configuration }}"
    - instances: "{{ hostvars['localhost'].instances }}"
    - container_registry: "{{ hostvars['localhost'].container_registry }}"
    - contrail_version_tag: "{{ hostvars['localhost'].contrail_version_tag }}"
    - roles: "{{ hostvars['localhost'].roles }}"
    - k8s_master_ip: "{{ hostvars['localhost'].k8s_master_ip if hostvars['localhost'].k8s_master_ip is defined else omit }}"
    - k8s_master_name: "{{ hostvars['localhost'].k8s_master_name if hostvars['localhost'].k8s_master_name is defined else omit }}"
    - kubemanagertoken: "{{ hostvars[k8s_master_name].kubemanagertoken if k8s_master_name is defined and hostvars[k8s_master_name].kubemanagertoken is defined else omit }}"
  environment:
    - https_proxy: "{{ contrail_configuration.HTTPS_PROXY|default('') }}"
    - http_proxy: "{{ contrail_configuration.HTTP_PROXY|default('') }}"
  tags: always


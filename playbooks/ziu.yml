---
  - name: Create container host group and evaluate variables for Contrail
    hosts: localhost
    connection: local
    gather_facts: yes
    pre_tasks:
      - name: Expose instances
        set_fact:
            instances: "{{ instances }}"
        when: hostvars['localhost']['instances'] is undefined
      - name: Expose global configuration
        set_fact:
            global_configuration: "{{ global_configuration | default({}) }}"
        when: hostvars['localhost']['global_configuration'] is undefined
      - name: Expose remote_locations configuration
        set_fact:
            remote_locations: "{{ remote_locations | default({}) }}"
        when: hostvars['localhost']['remote_locations'] is undefined
      - name: Expose provider config
        set_fact:
            provider_config: "{{ provider_config | default({}) }}"
        when: hostvars['localhost']['provider_config'] is undefined
    roles:
      - pip
      - { role: kolla_deployer, when: contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack' }
      - contrail_deployer
      - k8s_deployer
    vars_files:
      - "{{ config_file }}"
    tags: always
    environment:
      - "{{ contrail_ansible_environment | default({})}}"

  - name: ZIU stage 1 stop services
    hosts: container_hosts
    gather_facts: yes
    tasks:
      - set_fact:
          default_configuration: "{{ hostvars['localhost'].default_configuration }}"
          provider_config: "{{ hostvars['localhost']['provider_config'] }}"
          contrail_configuration: "{{ hostvars['localhost'].contrail_configuration }}"
          global_configuration: "{{ hostvars['localhost'].global_configuration }}"
          remote_locations: "{{ hostvars['localhost'].remote_locations }}"
          instances: "{{ hostvars['localhost'].instances }}"
          container_registry: "{{ hostvars['localhost'].container_registry }}"
          contrail_version_tag: "{{ hostvars['localhost'].contrail_version_tag }}"
          roles: "{{ hostvars['localhost'].roles }}"
          node_roles_dict: "{{ hostvars['localhost'].node_roles_dict }}"
          api_server: "{{ hostvars['localhost'].api_server }}"
          deleted_nodes_dict: "{{ hostvars['localhost'].deleted_nodes_dict }}"
      - include_vars:
          dir: "{{ playbook_dir }}/roles/contrail/defaults"
          extensions: ['yml']
      - include_role:
          name: contrail_config
          tasks_from: stop
        when: roles[instance_name].config is defined
      - include_role:
          name: contrail_webui
          tasks_from: stop
        when: roles[instance_name].webui is defined
      - include_role:
          name: contrail_redis
          tasks_from: stop
        when: roles[instance_name].webui is defined or roles[instance_name].analytics is defined
      - include_role:
          name: contrail_analytics
          tasks_from: stop
        when: roles[instance_name].analytics is defined
      - include_role:
          name: contrail_analytics_alarm
          tasks_from: stop
        when: roles[instance_name].analytics_alarm is defined
      - include_role:
          name: contrail_analytics_snmp
          tasks_from: stop
        when: roles[instance_name].analytics_snmp is defined
    vars_files:
      - "{{ hostvars['localhost'].config_file }}"

  - name: ZIU stage 2 start services
    hosts: container_hosts
    gather_facts: yes
    tasks:
      - include_role:
          name: contrail_config
        when: roles[instance_name].config is defined
      - include_role:
          name: contrail_webui
        when: roles[instance_name].webui is defined
      - include_role:
          name: contrail_redis
        when: roles[instance_name].webui is defined or roles[instance_name].analytics is defined
      - include_role:
          name: contrail_analytics
        when: roles[instance_name].analytics is defined
      - include_role:
          name: contrail_analytics_alarm
        when: roles[instance_name].analytics_alarm is defined
      - include_role:
          name: contrail_analytics_snmp
        when: roles[instance_name].analytics_snmp is defined
    vars_files:
      - "{{ hostvars['localhost'].config_file }}"

  - name: ZIU stage 3 stop and start control sequently
    hosts: container_hosts
    serial: 1
    gather_facts: yes
    tasks:
      - include_role:
          name: contrail_control
          tasks_from: stop
        when: roles[instance_name].control is defined
      - include_role:
          name: contrail_control_only
          tasks_from: stop
        when: roles[instance_name].control_only is defined
      - include_role:
          name: contrail_control
        when: roles[instance_name].control is defined
      - include_role:
          name: contrail_control_only
        when: roles[instance_name].control_only is defined
    vars_files:
      - "{{ hostvars['localhost'].config_file }}"

  - name: ZIU stage 4 stop and start databases
    hosts: container_hosts
    gather_facts: yes
    serial: 1
    tasks:
      - include_role:
          name: contrail_config_database
          tasks_from: stop
        when: roles[instance_name].config_database is defined
      - include_role:
          name: contrail_config_database
        when: roles[instance_name].config_database is defined
      - include_role:
          name: contrail_analytics_database
          tasks_from: stop
        when: roles[instance_name].analytics_database is defined
      - include_role:
          name: contrail_analytics_database
        when: roles[instance_name].analytics_database is defined
    vars_files:
      - "{{ hostvars['localhost'].config_file }}"

---
- name: remove interfaces from Network Manager
  lineinfile:
    path: "/etc/sysconfig/network-scripts/ifcfg-{{ item }}"
    regexp: "NM_CONTROLLED=no"
    line: "NM_CONTROLLED=no"
  with_items: "{{ ansible_interfaces }}"
  ignore_errors: yes

- name: restart network service
  service:
    name: network
    state: restarted

- name: install epel
  yum:
    name: epel-release
    state: latest

- name: install ntpd centos
  yum:
    name: ntp
    state: latest
  when: provider_data.ntpserver is defined

- name: enable service ntp
  systemd:
    name: ntpd
    enabled: yes

# centos uses chronyd by default and run it after restart instead of ntpd
# service can be absent - so ignore it
- name: disable service chronyd
  systemd:
    name: chronyd
    enabled: no
  ignore_errors: yes

- name: install pip
  yum:
    name: python-pip
    state: latest

- name: create k8s repo centos
  yum_repository:
    name: Kubernetes
    description: k8s repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    repo_gpgcheck: yes
    gpgcheck: yes
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install kubelet-1.9.2-0
  yum:
    name: kubelet-1.9.2-0
    state: latest
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install kubeadm-1.9.2-0
  yum:
    name: kubeadm-1.9.2-0
    state: latest
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install kubectl-1.9.2-0
  yum:
    name: kubectl-1.9.2-0
    state: latest
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: set selinux to permissive
  selinux:
    policy: targeted
    state: permissive

- name: install rsyslogd
  yum:
    name: rsyslog
    state: present
  when: instance_data.roles is defined and
        ( instance_data.roles.vrouter is defined)

- name: install latest kernel
  yum:
    name: 'kernel'
    state: latest
  register: upgrade_kernel
  when: (contrail_configuration.UPGRADE_KERNEL is defined and contrail_configuration.UPGRADE_KERNEL == true) or
        (instance_data.UPGRADE_KERNEL is defined and instance_data.UPGRADE_KERNEL == true)

# enable IOMMU if sriov is enabled

- name: set grub file name.
  stat:
    path: "/etc/default/grub"
  register: file_rc

- name: Turn on IOMMU
  lineinfile:
    path: "/etc/default/grub"
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="nomdmonddf nomdmonisw intel_iommu=on"'
    insertbefore: BOF
  when: (vrouter_data.sriov is defined and vrouter_data.sriov == true) and file_rc.stat.exists == true

- name: execute update-grub/sys
  command: grub2-mkconfig -o /boot/grub2/grub.cfg
  register: gstat
  when: (vrouter_data.sriov is defined and vrouter_data.sriov == true) and file_rc.stat.exists == true

- name: restart server
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  become: true
  when: (upgrade_kernel is defined and upgrade_kernel.changed) or
        (vrouter_data.sriov is defined and vrouter_data.sriov == true and gstat is defined and gstat.changed)

- name: wait for server to come back online
  wait_for_connection:
    delay: 30
    timeout: 2400
  when: (upgrade_kernel is defined and upgrade_kernel.changed) or
        (vrouter_data.sriov is defined and vrouter_data.sriov == true and gstat is defined and gstat.changed)

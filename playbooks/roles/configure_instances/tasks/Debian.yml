---
- name: install ntpd
  apt:
    name: ntp
    state: latest
  when: provider_data.ntpserver is defined

- name: add k8s repo key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: create k8s repo
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install kubelet-1.9.2-0
  apt:
    name: kubelet
    state: latest
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install kubeadm-1.9.2-0
  apt:
    name: kubeadm
    state: latest
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install kubectl-1.9.2-0
  apt:
    name: kubectl
    state: latest
  when: instance_data.roles is defined and
        ( instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined )

- name: install rsyslogd
  apt:
    name: rsyslog
    state: present
  when: instance_data.roles is defined and
        ( instance_data.roles.vrouter is defined )

# Install Kernel for Ubuntu 16.04 LTS
- name: install latest kernel
  apt:
    name: linux-generic-hwe-16.04
    state: latest
    install_recommends: yes
  register: upgrade_kernel
  when: (contrail_configuration.UPGRADE_KERNEL is defined and contrail_configuration.UPGRADE_KERNEL == true) or
        (instance_data.UPGRADE_KERNEL is defined and instance_data.UPGRADE_KERNEL == true)

# enable IOMMU if SRIOV is enabled

- name: set grub file name.
  stat:
    path: "/etc/default/grub"
  register: file_rc

- name: Turn on IOMMU
  lineinfile:
    path: "/etc/default/grub"
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="nomdmonddf nomdmonisw intel_iommu=on"'
    insertbefore: BOF
  when: (vrouter_data is defined and vrouter_data.SRIOV is defined and vrouter_data.SRIOV == true) and file_rc.stat.exists == true

- name: execute update-grub
  command: update-grub
  register: gstat
  when: (vrouter_data is defined and vrouter_data.SRIOV is defined and vrouter_data.SRIOV == true) and file_rc.stat.exists == true

- name: restart server
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  become: true
  when: (upgrade_kernel is defined and upgrade_kernel.changed) or
        (vrouter_data is defined and vrouter_data.SRIOV is defined and vrouter_data.SRIOV == true and gstat is defined and gstat.changed)

- name: wait for server to come back online
  wait_for_connection:
    delay: 30
    timeout: 2400
  when: (upgrade_kernel is defined and upgrade_kernel.changed) or
        (vrouter_data is defined and vrouter_data.SRIOV is defined and vrouter_data.SRIOV == true and gstat is defined and gstat.changed)

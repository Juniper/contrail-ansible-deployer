---
- name: initialize node_exists with false
  set_fact:
    node_exists: false

- name: check if node already exists
  set_fact:
    node_exists: true
  when: ansible_hostname.lower() in hostvars[k8s_master_name].node_list

- name: docker info for getting cgroup driver
  shell: docker info 2>/dev/null |grep "Cgroup Driver" |awk '{print $3}'
  register: docker_info

- name: get cgroup driver
  set_fact:
    cgroup_driver: "{{ docker_info.stdout }}"

- name: set cgroup driver to cgroupfs
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=.*"'
    line: 'Environment="KUBELET_CGROUP_ARGS=--cgroup-driver={{ cgroup_driver }}"'

- name: get listen interface
  shell: ip route get {{ k8s_master_ip }} | grep -o "dev.*" | awk '{print $2}'
  register: listen_nic

- name: get listen ip
  set_fact:
    listen_ip: "{{ hostvars[inventory_hostname]['ansible_%s' % listen_nic.stdout].ipv4.address }}"
  when: listen_nic is defined

- name: set InternalIP to listen_ip
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=.*"'
    line: 'Environment="KUBELET_EXTRA_ARGS=--node-ip={{ listen_ip }}"'
  when: listen_ip is defined

- name: enable kubelet service
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: True
  when: node_exists == false

- name: debug join
  debug:
    msg: "master token: {{ hostvars[k8s_master_name].mastertoken }}"

- name: join k8s cluster
  shell: "kubeadm join --token {{ hostvars[k8s_master_name].mastertoken }} --discovery-token-unsafe-skip-ca-verification {{ k8s_master_ip }}:6443"
  when: node_exists == false

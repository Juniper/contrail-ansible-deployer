---
- name: set instance data
  set_fact:
    instance_data: "{{ instances[hostvars[inventory_hostname].instance_name] }}"

- name: set instance name
  set_fact:
    instance_name: "{{ hostvars[inventory_hostname].instance_name }}"

- name: set k8s version for RedHat if not defined
  set_fact:
    k8s_version: "-1.9.2-0"
  when:
    - ansible_os_family == 'RedHat'
    - instance_data.roles is defined
    - instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined

- name: set k8s version for RedHat if defined
  set_fact:
    k8s_version: "-{{ global_configuration.K8S_VERSION }}-0"
  when:
    - ansible_os_family == 'RedHat'
    - instance_data.roles is defined
    - instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined
    - global_configuration is defined
    - global_configuration.K8S_VERSION is defined

- name: set k8s version for Debian if not defined
  set_fact:
    k8s_version: "=1.9.2-00"
  when:
    - ansible_os_family == 'Debian'
    - instance_data.roles is defined
    - instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined

- name: set k8s version for Debian if defined
  set_fact:
    k8s_version: "={{ global_configuration.K8S_VERSION }}-00"
  when:
    - ansible_os_family == 'Debian'
    - instance_data.roles is defined
    - instance_data.roles.k8s_master is defined or instance_data.roles.k8s_node is defined
    - global_configuration is defined
    - global_configuration.K8S_VERSION is defined

- name: OS specific package install
  include: "{{ ansible_os_family }}.yml"

# kubetcl must be first in the list - kubeadm has dependency to kubectl without version
- name: Install k8s packages if defined
  package:
    name: "{{ item }}{{ k8s_version }}"
    state: present
  with_items:
    - kubectl
    - kubelet
    - kubeadm
  environment:
    - https_proxy: "{{ contrail_configuration.HTTPS_PROXY | default('') }}"
    - http_proxy: "{{ contrail_configuration.HTTP_PROXY | default('') }}"
  when: k8s_version is defined

- name: configure k8s master
  include: configure_k8s_master_node.yml
  when: roles[instance_name].k8s_master is defined and k8s_master_name is defined and inventory_hostname == k8s_master_name

- name: join k8s master
  include: configure_k8s_join_node.yml
  when: roles[instance_name].k8s_node is defined and k8s_master_name is defined and inventory_hostname != k8s_master_name

- name: create k8s dashboard
  include: create_k8s_dashboard.yml
  when: roles[instance_name].k8s_master is defined and k8s_master_name is defined and inventory_hostname == k8s_master_name

- name: untaint node
  shell: "kubectl taint nodes {{ hostvars[instance.value.ip]['ansible_fqdn'] }} node-role.kubernetes.io/master-"
  with_dict: "{{ hostvars['localhost']['instances'] }}"
  loop_control:
    loop_var: instance
  when:
    - roles[instance_name].k8s_master is defined
    - k8s_master_name is defined
    - inventory_hostname == k8s_master_name
    - instance.value.roles is defined
    - instance.value.roles.k8s_node is defined
    - instance.value.roles.k8s_master is defined
  ignore_errors: yes

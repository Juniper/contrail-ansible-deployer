---
- name: create /etc/contrail/device_manager
  file:
    path: /etc/contrail/device_manager
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_device_manager.env stat"
  stat:
    path: "/etc/contrail/common_device_manager.env"
  register: st

- name: "delete /etc/contrail/common_device_manager.env if exists"
  file:
    path: "/etc/contrail/common_device_manager.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_device_manager.env"
  file:
    path: "/etc/contrail/common_device_manager.env"
    state: touch

- name: "populate global common_device_manager.env"
  lineinfile: dest=/etc/contrail/common_device_manager.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"
  no_log: True

- name: "populate instance specific common_device_manager.env"
  lineinfile: dest=/etc/contrail/common_device_manager.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ instances[instance_name].contrail_configuration }}"
  when: instances[instance_name].contrail_configuration is defined
  ignore_errors: yes
  no_log: True

- name: "populate pod specific common_device_manager.env"
  lineinfile: dest=/etc/contrail/common_device_manager.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ roles[instance_name].device_manager }} | default ({})"
  when: roles[instance_name].device_manager is defined
  ignore_errors: yes
  no_log: True

- name: update image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-node-init
    - contrail-nodemgr
    - contrail-external-dnsmasq
    - contrail-controller-config-devicemgr
  when: contrail_configuration.UPDATE_IMAGES is undefined or contrail_configuration.UPDATE_IMAGES != false

- name: initialize use_external_tftp variable
  set_fact:
    use_external_tftp: false

- name: check if ironic_pxe is deployed on node
  shell: "docker inspect ironic_pxe"
  register: ironic_pxe_container
  ignore_errors: yes

- name: set use_external_tftp if ironic_pxe is present
  set_fact:
    use_external_tftp: true
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - ironic_pxe_container.rc == 0

- name: create contrail device_manager compose file
  template:
    src: contrail-device-manager.yaml.j2
    dest: /etc/contrail/device_manager/docker-compose.yaml

- name: start contrail device_manager
  docker_service:
    project_src: /etc/contrail/device_manager

---
- name: set contrail configuration param
  set_fact:
    contrail_configuration: {}
  when: contrail_configuration is undefined
  tags:
   - always

- name: set orchestrator param
  set_fact:
    contrail_configuration: "{{ contrail_configuration | combine({'CLOUD_ORCHESTRATOR': orchestrator | default('none')}) }}"
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR is not defined
  tags:
   - always

- name: set empty kolla_config sections in case of OpenStack
  set_fact:
    kolla_config: {}
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - kolla_config is not defined
  tags:
   - always
- name: set empty kolla_global sections in case of OpenStack
  set_fact:
    kolla_config: "{{ kolla_config | combine({ 'kolla_globals': {} }) }}"
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - kolla_config.kolla_globals is not defined
  tags:
   - always
- name: set empty kolla_passwords sections in case of OpenStack
  set_fact:
    kolla_config: "{{ kolla_config | combine({ 'kolla_passwords': {} }) }}"
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - kolla_config.kolla_passwords is not defined
  tags:
   - always

- name: set stdin_open to true if it's not defined
  set_fact:
    contrail_configuration: "{{ contrail_configuration | combine({'STDIN_OPEN': true}) }}"
  when:
    - contrail_configuration.STDIN_OPEN is not defined
  tags:
    - always
- name: set tty to true if it's not defined
  set_fact:
    contrail_configuration: "{{ contrail_configuration | combine({'TTY': true}) }}"
  when:
    - contrail_configuration.TTY is not defined
  tags:
    - always

- name: Evaluate roles
  include: eval_node_roles.yml
  tags:
    - always

- name: add nodes to contrail_configuration
  set_fact:
    contrail_configuration: "{{ contrail_configuration | combine({item.name: item.nodes|join(',')}) }}"
  when: contrail_configuration.get(item.name, 0) == 0 and item.nodes | length > 0
  with_items:
    - {'name': 'CONFIG_NODES', 'nodes': "{{config_nodes_list}}"}
    - {'name': 'CONTROL_NODES', 'nodes': "{{control_nodes_list}}"}
    - {'name': 'CONTROLLER_NODES', 'nodes': "{{control_nodes_list}}"}
    - {'name': 'CONFIGDB_NODES', 'nodes': "{{configdb_nodes_list}}"}
    - {'name': 'ANALYTICS_NODES', 'nodes': "{{analytics_nodes_list}}"}
    - {'name': 'ANALYTICSDB_NODES', 'nodes': "{{analyticsdb_nodes_list}}"}
    - {'name': 'WEBUI_NODES', 'nodes': "{{webui_nodes_list}}"}
    - {'name': 'TSN_NODES', 'nodes': "{{tsn_nodes_list}}"}
    - {'name': 'KUBERNETES_API_NODES', 'nodes': "{{k8s_master_nodes_list}}"}

- name: explicitly set OpenStack secrets for Contrail
  set_fact:
    contrail_configuration: "{{ contrail_configuration | combine({item.name: kolla_config.kolla_passwords.get(item.os_key) }) }}"
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - item.is_defined | bool
  tags:
   - always
  with_items:
    - { name: 'KEYSTONE_AUTH_ADMIN_PASSWORD', os_key: 'keystone_admin_password', is_defined: "{{ kolla_config.kolla_passwords.keystone_admin_password is defined }}" }
    - { name: 'METADATA_PROXY_SECRET', os_key: 'metadata_secret', is_defined: "{{ kolla_config.kolla_passwords.metadata_secret is defined }}" }

- name: get the internal VIP from openstack node if haproxy is disabled
  set_fact:
    openstack_internal_vip: "{{ openstack_nodes_list | first }}"
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - kolla_config.kolla_globals.enable_haproxy is defined
    - not (kolla_config.kolla_globals.enable_haproxy | bool)
  tags:
   - always
- name: get the internal VIP from internal_vip if haproxy is enabled
  set_fact:
    openstack_internal_vip: "{{ kolla_config.kolla_globals.kolla_internal_vip_address }}"
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
    - kolla_config.kolla_globals.enable_haproxy is not defined or (kolla_config.kolla_globals.enable_haproxy | bool)
  tags:
   - always

- name: set OpenStack endpoints from kolla_config.kolla_globals
  set_fact:
    contrail_configuration: "{{ contrail_configuration | combine({item.name: openstack_internal_vip }) }}"
  when:
    - item.is_not_defined | bool
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'openstack'
  tags:
    - always
  with_items:
    - { name: 'KEYSTONE_AUTH_HOST', is_not_defined: "{{ contrail_configuration.KEYSTONE_AUTH_HOST is not defined }}" }
    - { name: 'IPFABRIC_SERVICE_HOST', is_not_defined: "{{ contrail_configuration.IPFABRIC_SERVICE_HOST is not defined }}" }
    - { name: 'computeManager_ip', is_not_defined: "{{ contrail_configuration.computeManager_ip is not defined }}" }
    - { name: 'imageManager_ip', is_not_defined: "{{ contrail_configuration.imageManager_ip is not defined }}" }
    - { name: 'networkManager_ip', is_not_defined: "{{ contrail_configuration.networkManager_ip is not defined }}" }

- name: Evaluate k8s master ip/name
  include: set_master.yml
  tags:
    - k8s

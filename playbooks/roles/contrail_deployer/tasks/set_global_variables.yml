---
- name: set contrail configuration param
  set_fact:
    contrail_configuration: {}
  when: contrail_configuration is undefined
  tags:
   - always

- name: set container tag contrail version if defined
  set_fact:
    contrail_version_tag: "{{ contrail_configuration.CONTRAIL_VERSION | default('latest') }}"
  tags:
   - always
- name: add openstack version tag if defined
  set_fact:
    contrail_version_tag: "{{ contrail_configuration.OPENSTACK_VERSION }}-{{ contrail_version_tag }}"
  when:
    - contrail_configuration.OPENSTACK_VERSION is defined
    - contrail_configuration.CONTRAIL_VERSION is defined
    - contrail_configuration.CONTRAIL_VERSION != 'latest'
  tags:
    - always
- name: add linux distr tag if defined
  set_fact:
    contrail_version_tag: "{{ contrail_configuration.LINUX_DISTR }}-{{ contrail_version_tag }}"
  when:
    - contrail_configuration.LINUX_DISTR is defined
    - contrail_configuration.CONTRAIL_VERSION is defined
    - contrail_configuration.CONTRAIL_VERSION != 'latest'
  tags:
   - always

# contrail_windows_version_tag is different from contrail_version_tag, because Windows releases are
# not tied to orchestrator.
# For example, Linux containers can have tag newton-master-347, but Windows containers have just
# master-347. However, it should still be possibe to deploy Linux containers from newton-master-347
# and Windows services from master-347. Build number should still match though.
- name: set windows container tag contrail version if defined
  set_fact:
    contrail_windows_version_tag: "{{ contrail_configuration.CONTRAIL_VERSION | default('latest') }}"
  tags:
   - always

- name: add specific contrail version tag if defined
  set_fact:
    contrail_version_tag: "{{ contrail_configuration.CONTRAIL_CONTAINER_TAG }}"
  when:
    - contrail_configuration.CONTRAIL_CONTAINER_TAG is defined
  tags:
    - always

- name: set registry if defined
  set_fact:
    container_registry: "{{ global_configuration.CONTAINER_REGISTRY }}"
  when:
    - global_configuration is defined
    - global_configuration.CONTAINER_REGISTRY is defined
  tags:
    - always
- name: set registry to opencontrailnightly if undefined
  set_fact:
    container_registry: opencontrailnightly
  when:
    container_registry is not defined
  tags:
   - always

- set_fact:
    roles: {}
- name: add roles if defined
  set_fact:
     roles: "{{ roles | combine({item.key: item.value.roles}, recursive=True) }}"
  when: item.value.roles is defined
  with_dict: "{{ instances }}"

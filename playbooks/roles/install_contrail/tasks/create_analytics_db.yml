---
- name: set cassandra seeds to ANALYTICSDB_NODES if defined
  set_fact:
    cassandra_seeds: "{{ contrail_configuration.ANALYTICSDB_NODES }}"
  when: contrail_configuration.ANALYTICSDB_NODES is defined

- name: set cassandra seeds to CONTROLLER_NODES if ANALYTICSDB_NODES not defined
  set_fact:
    cassandra_seeds: "{{ contrail_configuration.CONTROLLER_NODES }}"
  when: contrail_configuration.CONTROLLER_NODES is defined and contrail_configuration.ANALYTICSDB_NODES is undefined

- name: set zookeeper nodes to ANALYTICSDB_NODES if defined
  set_fact:
    zookeeper_nodes: "{{ contrail_configuration.ANALYTICSDB_NODES }}"
  when: contrail_configuration.ANALYTICSDB_NODES is defined

- name: set zookeeper nodes to CONTROLLER_NODES if ANALYTICSDB_NODES not defined
  set_fact:
    zookeeper_nodes: "{{ contrail_configuration.CONTROLLER_NODES }}"
  when: contrail_configuration.CONTROLLER_NODES is defined and contrail_configuration.ANALYTICSDB_NODES is undefined

- name: set kafka nodes to ANALYTICSDB_NODES if defined
  set_fact:
    kafka_nodes: "{{ contrail_configuration.ANALYTICSDB_NODES }}"
  when: contrail_configuration.ANALYTICSDB_NODES is defined

- name: set kafka nodes to CONTROLLER_NODES if ANALYTICSDB_NODES not defined
  set_fact:
    kafka_nodes: "{{ contrail_configuration.CONTROLLER_NODES }}"
  when: contrail_configuration.CONTROLLER_NODES is defined and contrail_configuration.ANALYTICSDB_NODES is undefined


- name: start contrail analyticsdb
  docker_service:
    project_name: contrail-analyticsdb
    pull: yes
    definition:
      version: '2'
      services:
        network:
          image: docker.io/kubernetes/pause
          network_mode: "host"
          volumes:
           - /etc/hosts:/etc/hosts
        kafka:
          image: "{{ container_registry }}/contrail-external-kafka:{{ contrail_version_tag }}"
          network_mode: "service:network"
          env_file: /tmp/common.env
          environment:
           - KAFKA_NODES={{ kafka_nodes }}
           - ZOOKEEPER_NODES={{ zookeeper_nodes }}
           - ZOOKEEPER_PORT=2182
          depends_on:
            - network
          restart: on-failure
          #volumes:
          #  - /var/log/contrail:/var/log/contrail
        cassandra:
          image: "{{ container_registry }}/contrail-external-cassandra:{{ contrail_version_tag }}"
          env_file: /tmp/common.env
          environment:
           - CASSANDRA_SEEDS={{ cassandra_seeds }}
           - CASSANDRA_START_RPC=true
           - CASSANDRA_CLUSTER_NAME=contrail_analytics
           - CASSANDRA_PORT=9160
           - CASSANDRA_CQL_PORT=9042
           - CASSANDRA_SSL_STORAGE_PORT=7011
           - CASSANDRA_STORAGE_PORT=7010
           - CASSANDRA_JMX_LOCAL_PORT=7200
          #volumes:
          # - /var/lib/cassandra/data
          network_mode: "service:network"
          depends_on:
            - network
          restart: on-failure
        zookeeper:
          image: "{{ container_registry }}/contrail-external-zookeeper:{{ contrail_version_tag }}"
          env_file: /tmp/common.env
          environment:
           - ZOOKEEPER_NODES={{ zookeeper_nodes }}
           - ZOOKEEPER_PORTS=4888:5888
           - ZOOKEEPER_PORT=2182
          #volumes:
          # - /data
          network_mode: "service:network"
          depends_on:
            - network
          restart: on-failure

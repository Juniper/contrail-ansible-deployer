---
- name: set contrail configuration param
  set_fact:
   contrail_configuration: {}
  when: contrail_configuration is undefined

- name: set container tag contrail version to master if not defined
  set_fact:
    contrail_version_tag: latest
  when: contrail_configuration.CONTRAIL_VERSION is undefined

- name: set container tag contrail version if defined
  set_fact:
    contrail_version_tag: "{{ contrail_configuration.CONTRAIL_VERSION }}"
  when: contrail_configuration.CONTRAIL_VERSION is defined

- name: add linux distr tag if defined
  set_fact:
    contrail_version_tag: "{{ contrail_version_tag}}-{{ contrail_configuration.LINUX_DISTR }}"
  when: contrail_configuration.LINUX_DISTR is defined

- name: add openstack version tag if defined
  set_fact:
    contrail_version_tag: "{{ contrail_version_tag}}-{{ contrail_configuration.OPENSTACK_VERSION }}"
  when: contrail_configuration.OPENSTACK_VERSION is defined

- name: set registry to opencontrailnightly if undefined
  set_fact:
    container_registry: opencontrailnightly
  when: contrail_configuration.CONTAINER_REGISTRY is undefined

- name: set registry if defined
  set_fact:
    container_registry: contrail_configuration.container_registry
  when: contrail_configuration.CONTAINER_REGISTRY is defined

- set_fact:
    default_roles: "{{ default_roles|default({})|combine({item.0: item.1}) }}"
  with_together:
    - ['analytics', 'analytics_database', 'config', 'config_database', 'control', 'k8s_master', 'vrouter', 'webui']
    - []

- name: create roles
  set_fact:
    default_roles_hosts: "{{ default_roles_hosts|default({})|combine({item: default_roles}, recursive=True) }}"
  with_items:
    - "{{ groups['container_hosts'] }}"
  when: roles is undefined

- name: set roles if not defined
  set_fact:
    roles: "{{ default_roles_hosts }}"
  when: default_roles_hosts is defined

- name: create controller host list if not defined
  set_fact:
    controller: "{{ groups['container_hosts']|join(', ') }}"
  when: contrail_configuration.CONTROLLER_NODES is undefined

- name: creater contrail_configuration.CONTROLLER_NODES
  set_fact:
    contrail_configuration: "{{ contrail_configuration|default({})|combine({'CONTROLLER_NODES': controller}) }}"
  when: contrail_configuration.CONTROLLER_NODES is undefined

- name: create /var/log/contrail
  file:
    path: /var/log/contrail
    state: directory
    recurse: yes

- name: create /etc/contrail/compose
  file:
    path: /etc/contrail/compose
    state: directory
    recurse: yes

- name: get /etc/contrail/common.env stat
  stat:
    path: /etc/contrail/common.env
  register: st

- name: delete /etc/contrail/common.env if exists
  file:
    path: /etc/contrail/common.env
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: create /etc/contrail/common.env
  file:
    path: /etc/contrail/common.env
    state: touch

- name: populate common.env
  lineinfile: dest=/etc/contrail/common.env regexp='.*{{ item.key }}$' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"

---
- name: create /etc/contrail/config
  file:
    path: /etc/contrail/config
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_config.env stat"
  stat:
    path: "/etc/contrail/common_config.env"
  register: st

- name: "delete /etc/contrail/common_config.env if exists"
  file:
    path: "/etc/contrail/common_config.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_config.env"
  file:
    path: "/etc/contrail/common_config.env"
    state: touch

- name: "populate global common_config.env"
  lineinfile: dest=/etc/contrail/common_config.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"

- name: "populate instance specific common_config.env"
  lineinfile: dest=/etc/contrail/common_config.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ instances[instance_name].contrail_configuration }}"
  when: instances[instance_name].contrail_configuration is defined
  ignore_errors: yes

- name: "populate pod specific common_config.env"
  lineinfile: dest=/etc/contrail/common_config.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ roles[instance_name].config }} | default ({})"
  when: roles[instance_name].config is defined
  ignore_errors: yes

- name: create config-env configmap
  shell: kubectl create configmap config-env --from-env-file=/etc/contrail/common_config.env -n kube-system
  when:
    - CONTRAIL_SCHEDULER == 'k8s'

- name: update image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-node-init
    - contrail-nodemgr
    - contrail-controller-config-api
    - contrail-controller-config-svcmonitor
    - contrail-controller-config-schema
    - contrail-controller-config-devicemgr
  when:
    - UPDATE_IMAGES is undefined or UPDATE_IMAGES != false
    - CONTRAIL_SCHEDULER == 'compose'

- name: create contrail config compose file
  template:
    src: contrail-config.yaml.j2
    dest: /etc/contrail/config/docker-compose.yaml
  when: CONTRAIL_SCHEDULER == 'compose'

- name: start contrail config with compose
  docker_service:
    project_src: /etc/contrail/config
  when: CONTRAIL_SCHEDULER == 'compose'

- name: create contrail config k8s manifest
  template:
    src: contrail-config-k8s.yaml.j2
    dest: /etc/contrail/config/kubernetes-manifest.yaml
  when: CONTRAIL_SCHEDULER == 'k8s'

- name: start contrail config with k8s
  shell: kubectl apply -f /etc/contrail/config/kubernetes-manifest.yaml
  when: CONTRAIL_SCHEDULER == 'k8s'

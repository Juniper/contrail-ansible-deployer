- set_fact:
    config_nodes_list: []
  when: config_nodes_list is not defined

- name: add config nodes to the list
  set_fact:
    config_nodes_list: "{{ config_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.config is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add config nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    config_nodes_list: "{{ config_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.config is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    control_nodes_list: []
  when: control_nodes_list is not defined

- name: add control nodes to the list
  set_fact:
    control_nodes_list: "{{ control_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.control is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add control nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    control_nodes_list: "{{ control_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.control is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    configdb_nodes_list: []
  when: configdb_nodes_list is not defined

- name: add configdb nodes to the list
  set_fact:
    configdb_nodes_list: "{{ configdb_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.config_database is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add configdb nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    configdb_nodes_list: "{{ configdb_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.config_database is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    analytics_nodes_list: []
  when: analytics_nodes_list is not defined

- name: add analytics nodes to the list
  set_fact:
    analytics_nodes_list: "{{ analytics_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.analytics is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add analytics nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    analytics_nodes_list: "{{ analytics_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.analytics is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    analyticsdb_nodes_list: []
  when: analyticsdb_nodes_list is not defined

- name: add analyticsdb nodes to the list
  set_fact:
    analyticsdb_nodes_list: "{{ analyticsdb_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.analytics_database is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add analyticsdb nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    analyticsdb_nodes_list: "{{ analyticsdb_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.analytics_database is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    webui_nodes_list: []
  when: webui_nodes_list is not defined

- name: add webui nodes to the list
  set_fact:
    webui_nodes_list: "{{ webui_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.webui is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add webui nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    webui_nodes_list: "{{ webui_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.webui is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    k8s_master_nodes_list: []
  when: k8s_master_nodes_list is not defined

- name: add k8s_master nodes to the list
  set_fact:
    k8s_master_nodes_list: "{{ k8s_master_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.k8s_master is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add k8s_master nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    k8s_master_nodes_list: "{{ k8s_master_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.k8s_master is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    k8s_node_nodes_list: []
  when: k8s_node_nodes_list is not defined

- name: add k8s_node nodes to the list
  set_fact:
    k8s_node_nodes_list: "{{ k8s_node_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.k8s_node is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add k8s_node nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    k8s_node_nodes_list: "{{ k8s_node_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.k8s_node is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    openstack_nodes_list: []
  when: openstack_nodes_list is not defined

- name: add openstack nodes to the list
  set_fact:
    openstack_nodes_list: "{{ openstack_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.openstack is defined or item.value.roles.openstack_control is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add openstack nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    openstack_nodes_list: "{{ openstack_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.openstack is defined or item.value.roles.openstack_control is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- set_fact:
    vcenter_plugin_nodes_list: []
  when: vcenter_plugin_nodes_list is not defined

- name: add vcenter_plugin nodes to the list
  set_fact:
    vcenter_plugin_nodes_list: "{{ vcenter_plugin_nodes_list + [ item.value.private_ip | default(item.value.ip) ] }}"
  when:
    - item.value.roles.vcenter_plugin is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is undefined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

- name: add vcenter_plugin nodes to the list with CONTROL_DATA_NET_LIST
  set_fact:
    vcenter_plugin_nodes_list: "{{ vcenter_plugin_nodes_list + [ hostvars[item.value.ip]['ansible_' + host_intf_dict[item.value.ip]]['ipv4']['address'] ] }}"
  when:
    - item.value.roles.vcenter_plugin is defined
    - contrail_configuration.CONTROL_DATA_NET_LIST is defined
  with_dict: "{{ hostvars['localhost']['instances'] }}"

---
- name: set instance data
  set_fact:
    instance_data: "{{ instances[hostvars[inventory_hostname].instance_name] }}"
  tags:
   - always

- name: set instance name
  set_fact:
    instance_name: "{{ hostvars[inventory_hostname].instance_name }}"
  tags:
   - always

# TODO: move this to install_k8s playbook
- name: copy global variables from localhost's hostvars
  set_fact:
    k8s_master_ip: "{{ hostvars['localhost'].k8s_master_ip if hostvars['localhost'].k8s_master_ip is defined else omit }}"
    k8s_master_name: "{{ hostvars['localhost'].k8s_master_name if hostvars['localhost'].k8s_master_name is defined else omit }}"
  tags:
   - always

- name: create /var/log/contrail
  file:
    path: /var/log/contrail
    state: directory
    recurse: yes
  tags:
   - always

- name: create /etc/contrail/compose
  file:
    path: /etc/contrail/compose
    state: directory
    recurse: yes
  tags:
   - always

- name: get /etc/contrail/common.env stat
  stat:
    path: /etc/contrail/common.env
  register: st
  tags:
   - always

- name: delete /etc/contrail/common.env if exists
  file:
    path: /etc/contrail/common.env
    state: absent
  when: st.stat.exists is defined and st.stat.exists
  tags:
   - always

- name: create /etc/contrail/common.env
  file:
    path: /etc/contrail/common.env
    state: touch
  tags:
   - always

- name: populate common.env
  lineinfile: dest=/etc/contrail/common.env regexp='.*{{ item.key }}$' line="{{ item.key }}={{ item.value }}" state=present
  no_log: True
  with_dict: "{{ contrail_configuration }}"
  tags:
   - always
  no_log: True

- name: create redis
  include: create_redis.yml
  when: roles[instance_name].webui is defined or roles[instance_name].analytics is defined
  tags:
    - webui
    - analytics

- name: create contrail config datqbase
  include: create_config_database.yml
  when: roles[instance_name].config_database is defined
  tags:
    - config_database

- name: create contrail config
  include: create_config.yml
  when: roles[instance_name].config is defined
  tags:
    - config

- name: create contrail webui
  include: create_webui.yml
  when: roles[instance_name].webui is defined
  tags:
    - webui

- name: create contrail control
  include: create_control.yml
  when: roles[instance_name].control is defined
  tags:
   - control

- name: create contrail control_only
  include: create_control_only.yml
  when: roles[instance_name].control_only is defined
  tags:
    - control_only

- name: create contrail analytics database
  include: create_analytics_database.yml
  when: roles[instance_name].analytics_database is defined
  tags:
    - analytics_database

- name: create contrail analytics
  include: create_analytics.yml
  when: roles[instance_name].analytics is defined
  tags:
    - analytics

- name: create cni
  include: create_k8s_cni.yml
  when: roles[instance_name].k8s_node is defined
  tags:
    - k8s

- name: configure k8s master
  include: configure_k8s_master_node.yml
  when: roles[instance_name].k8s_master is defined and k8s_master_name is defined and inventory_hostname == k8s_master_name
  tags:
    - k8s

- name: create contrail vrouter
  include: create_vrouter.yml
  when: roles[instance_name].vrouter is defined
  tags:
    - vrouter

- name: Pluginize legacy compute
  include: compute_legacy.yml
  when: roles[instance_name].openstack_compute_legacy is defined

- name: join k8s master
  include: configure_k8s_join_node.yml
  when: roles[instance_name].k8s_node is defined and k8s_master_name is defined and inventory_hostname != k8s_master_name
  tags:
    - k8s

- name: create k8s dashboard
  include: create_k8s_dashboard.yml
  when: roles[instance_name].k8s_master is defined and k8s_master_name is defined and inventory_hostname == k8s_master_name
  tags:
    - k8s

- name: create contrail kube manager
  include: create_kubemanager.yml
  when: roles[instance_name].kubemanager is defined and k8s_master_ip is defined and k8s_master_name is defined
  tags:
    - k8s

- name: create contrail vcenter-plugin
  include: create_vcenter_plugin.yml
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'vcenter'
    - roles[instance_name].vcenter_plugin is defined
  tags:
    - vcenter

- name: create contrail vcenter-manager
  include: create_vcenter_manager.yml
  when:
    - contrail_configuration.CLOUD_ORCHESTRATOR == 'vcenter'
    - roles[instance_name].vcenter_manager is defined
  tags:
    - vcenter

- name: untaint node
  shell: "kubectl taint nodes {{ hostvars[instance.value.ip]['ansible_fqdn'] }} node-role.kubernetes.io/master-"
  with_dict: "{{ hostvars['localhost']['instances'] }}"
  loop_control:
    loop_var: instance
  when:
    - roles[instance_name].k8s_master is defined
    - k8s_master_name is defined
    - inventory_hostname == k8s_master_name
    - instance.value.roles is defined
    - instance.value.roles.k8s_node is defined
    - instance.value.roles.k8s_master is defined
  ignore_errors: yes

---
- name: create /etc/contrail/analytics
  file:
    path: /etc/contrail/analytics
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_analytics.env stat"
  stat:
    path: "/etc/contrail/common_analytics.env"
  register: st

- name: "delete /etc/contrail/common_analytics.env if exists"
  file:
    path: "/etc/contrail/common_analytics.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_analytics.env"
  file:
    path: "/etc/contrail/common_analytics.env"
    state: touch

- name: "populate global common_analytics.env"
  lineinfile: dest=/etc/contrail/common_analytics.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"
  no_log: True

- name: "populate instance specific common_analytics.env"
  lineinfile: dest=/etc/contrail/common_analytics.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ instances[instance_name].contrail_configuration }}"
  when: instances[instance_name].contrail_configuration is defined
  ignore_errors: yes
  no_log: True

- name: "populate pod specific common_analytics.env"
  lineinfile: dest=/etc/contrail/common_analytics.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ roles[instance_name].analytics }}"
  ignore_errors: yes
  no_log: True

- name: configure iptables to allow traffic to contrail analytics (TCP)
  iptables:
    chain: INPUT 
    protocol: tcp
    destination_port: "{{ item }}"
    jump: ACCEPT
  with_items:
  - 3514
  - 5920
  - 5921
  - 5995
  - 8081
  - 8086
  - 8089
  - 8090
  - 8091
  - 8104
  - 8181

- name: configure iptables to allow traffic to contrail analytics (UDP)
  iptables:
    chain: INPUT 
    protocol: udp
    destination_port: "{{ item }}"
    jump: ACCEPT
  with_items:
  - 3333
  - 3514

- name: Save iptables rules into service
  shell: 'service netfilter-persistent save'
  when: ansible_os_family == 'Debian'

- name: Save iptables rules into service
  shell: 'service iptables save'
  when: ansible_os_family == 'RedHat'

- name: update image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-node-init
    - contrail-nodemgr
    - contrail-analytics-api
    - contrail-analytics-collector
    - contrail-analytics-query-engine
    - contrail-analytics-alarm-gen
    - contrail-analytics-snmp-collector
    - contrail-analytics-topology
  when: UPDATE_IMAGES is undefined or UPDATE_IMAGES != false

- name: create contrail analytics file
  template:
    src: contrail-analytics.yaml.j2
    dest: /etc/contrail/analytics/docker-compose.yaml

- name: start contrail analytics
  docker_service:
    project_src: /etc/contrail/analytics

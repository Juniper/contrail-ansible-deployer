---
- name: "create /etc/contrail/control_only_{{ location.key }}"
  file:
    path: "/etc/contrail/control_only_{{ location.key }}"
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_control_only_{{ location.key }}.env stat"
  stat:
    path: "/etc/contrail/common_control_only_{{ location.key }}.env"
  register: st

- name: "delete /etc/contrail/common_control_only_{{ location.key }}.env if exists"
  file:
    path: "/etc/contrail/common_control_only_{{ location.key }}.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_control_only_{{ location.key }}.env"
  file:
    path: "/etc/contrail/common_control_only_{{ location.key }}.env"
    state: touch

- name: "populate cluster wide common_control_only_{{ location.key }}.env"
  lineinfile: dest=/etc/contrail/common_control_only_{{ location.key }}.env regexp='.*{{ item.key }}$' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"

- name: "populate pod specific common_control_only_{{ location.key }}.env"
  lineinfile: dest=/etc/contrail/common_control_only_{{ location.key }}.env regexp='.*{{ config_item.key }}$' line="{{ config_item.key }}={{ config_item.value }}" state=present
  with_dict: "{{ location.value }}"
  loop_control:
    loop_var: config_item

- name: calculate XMPP port if not assigned
  set_fact:
    xmpp_port: "{{ location.value.CLUSTER_ID|int + 15268 }}" 
  when: location.value.XMPP_SERVER_PORT is undefined

- name: set XMPP_SERVER_PORT port if assigned
  set_fact:
    xmpp_port: "{{ location.value.XMPP_SERVER_PORT }}"
  when: location.value.XMPP_SERVER_PORT is defined

- name: "add XMPP_SERVER_PORT to common_control_only_{{ location.key }}.env"
  lineinfile: dest=/etc/contrail/common_control_only_{{ location.key }}.env regexp='.*XMPP_SERVER_PORT$' line="XMPP_SERVER_PORT={{ xmpp_port }}" state=present

- name: calculate BGP port if not assigned
  set_fact:
    bgp_port: "{{ location.value.CLUSTER_ID|int + 11178 }}"
  when: location.value.BGP_PORT is undefined

- name: set BGP port if assigned
  set_fact:
   bgp_port: "{{ location.value.BGP_PORT }}"
  when: location.value.BGP_PORT is defined

- name: "add BGP_PORT to common_control_only_{{ location.key }}.env"
  lineinfile: dest=/etc/contrail/common_control_only_{{ location.key }}.env regexp='.*BGP_PORT$' line="BGP_PORT={{ bgp_port }}" state=present

- name: calculate control introspect port
  set_fact:
    introspect_port: "{{ location.value.CLUSTER_ID|int + 18082 }}"

- name: "add control introspect to common_control_only_{{ location.key }}.env"
  lineinfile: dest=/etc/contrail/common_control_only_{{ location.key }}.env regexp='.*CONTROL_INTROSPECT_LISTEN_PORT$' line="CONTROL_INTROSPECT_LISTEN_PORT={{ introspect_port }}" state=present

- name: update image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-nodemgr
    - contrail-controller-control-control
  when: UPDATE_IMAGES is undefined or UPDATE_IMAGES != false

- name: "create contrail control {{ location.key }} compose file"
  template:
    src: contrail-control-only.yaml.j2
    dest: "/etc/contrail/control_only_{{ location.key }}/docker-compose.yaml"

- name: "start contrail control {{ location.key }}"
  docker_service:
    project_src: "/etc/contrail/control_only_{{ location.key }}"

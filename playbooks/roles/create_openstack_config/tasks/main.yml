---
- name: Detect default value for mgmt_interface
  set_fact:
    external_interface_detected: >-
      {%- set int_dict = hostvars['localhost']['instances']|mgmt_intf_dict(contrail_configuration, kolla_config if kolla_config is defined else {}, hostvars) -%}
      {{ int_dict.get(inventory_hostname, ansible_default_ipv4.interface) }}

- name: Detect default value for network_interface
  set_fact:
    network_interface_detected: >-
      {%- set int_dict = hostvars['localhost']['instances']|ctrl_data_intf_dict(contrail_configuration, kolla_config if kolla_config is defined else {}, hostvars) -%}
      {{ int_dict.get(inventory_hostname, external_interface_detected) }}

- debug:
    msg: "DEBUG network_interface {{ network_interface_detected }}"

- debug:
    msg: "DEBUG kolla_external_vip_interface {{ external_interface_detected }}"

- include: inventory.yml
  delegate_to: localhost
  run_once: yes

- include: passwords.yml
  when: gen_passwords | bool
  delegate_to: localhost
  run_once: yes

- include: host_params.yml

# define empty kolla_globals
- set_fact:
    kolla_globals: {}
  when: kolla_globals is undefined
  delegate_to: localhost
  run_once: yes

- set_fact:
    filtered_kolla_globals: {}
  when: kolla_globals is undefined
  delegate_to: localhost
  run_once: yes

# filter kolla_globals
- name: filter defined kolla_globals
  set_fact:
    filtered_kolla_globals: "{{ filtered_kolla_globals | combine({item.key: item.value}) }}"
  when: item.key not in ['docker_registry', 'docker_registry_username', 'docker_registry_password']
  with_dict: "{{ kolla_globals }}"
  delegate_to: localhost
  run_once: yes

- name: Merge kolla_globals params with defaults
  set_fact:
    final_kolla_globals: "{{ default_kolla_globals | combine(filtered_kolla_globals) }}"
  delegate_to: localhost
  run_once: yes

- debug:
    msg: "DEBUG final_kolla_globals {{ final_kolla_globals }}"

- name: Populate etc/kolla/globals.yml
  template:
    src: "{{ role_path }}/templates/globals.yml.j2"
    dest: "{{ kolla_dir }}/etc/kolla/globals.yml"
  delegate_to: localhost
  run_once: yes


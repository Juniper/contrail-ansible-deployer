---
- name: "create /etc/contrail/tsn_haproxy"
  file:
    path: /etc/contrail/tsn_haproxy
    state: directory
    recurse: yes

- name: "get /etc/contrail/tsn_haproxy.env stat"
  stat:
    path: "/etc/contrail/tsn_haproxy.env"
  register: st

- name: "delete /etc/contrail/tsn_haproxy.env if exists"
  file:
    path: "/etc/contrail/tsn_haproxy.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/tsn_haproxy.env"
  file:
    path: "/etc/contrail/tsn_haproxy.env"
    state: touch

- set_fact:
    toragent_hosts_list: []
- name: add toragent hosts to the list
  set_fact:
    toragent_hosts_list: "{{ toragent_hosts_list + [ item.key ] }}"
  when:
    - item.value.roles is defined
    - ( item.value.roles.keys() | select('search','toragent') | list | count > 0 )
  with_dict: "{{ instances }}"

- set_fact:
    tsn_haproxy_config: {}
- name: construct tsn ip and ovs port list for redundat toragent pairs in tsn_haproxy_config dict
  set_fact:
    tsn_haproxy_config: "{{ tsn_haproxy_config | calculate_tsn_haproxy_config(toragent_hosts_list, instances, contrail_configuration) }}"
  when:
    - toragent_hosts_list | length > 0

- name: "populate pod specific tsn_haproxy.env with IP_LIST and PORT_LIST calculated by haproxy filter"
  lineinfile: dest=/etc/contrail/tsn_haproxy.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value | join(',') }}" state=present
  when:
    - tsn_haproxy_config.keys() | length > 0
  with_dict: "{{ tsn_haproxy_config }}"

- name: "populate global tsn_haproxy.env"
  lineinfile: dest=/etc/contrail/tsn_haproxy.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"
  no_log: True

- name: "populate instance specific tsn_haproxy.env"
  lineinfile: dest=/etc/contrail/common_config.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ instances[instance_name].contrail_configuration }}"
  when: instances[instance_name].contrail_configuration is defined
  ignore_errors: yes
  no_log: True

- name: "populate pod specific tsn_haproxy.env"
  lineinfile: dest=/etc/contrail/tsn_haproxy.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value | string }}" state=present
  with_dict:
    "{{ roles[instance_name].tsn_haproxy | default({}) }}"
  when: roles[instance_name].tsn_haproxy is defined
  ignore_errors: yes
  no_log: True

- name: "update image"
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-node-init
    - contrail-external-haproxy
  when:
    - contrail_configuration.UPDATE_IMAGES is undefined or contrail_configuration.UPDATE_IMAGES != false

- name: "create tsn_haproxy compose file"
  template:
    src: haproxy.yaml.j2
    dest: "/etc/contrail/tsn_haproxy/docker-compose.yaml"

- name: "start tsn_haproxy container"
  docker_service:
    project_src: /etc/contrail/tsn_haproxy

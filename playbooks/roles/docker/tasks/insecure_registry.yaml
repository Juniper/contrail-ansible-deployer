---

# this file is parameterized
# it takes 'docker_registry' as a parameter that should be added to insecure_registry list

- name: register /etc/docker/daemon.json
  stat:
    path: /etc/docker/daemon.json
  register: p

- name: read /etc/docker/daemon.json if it exists
  shell: cat /etc/docker/daemon.json
  register: docker_daemon_file
  when: p.stat.exists

- name: set entries to json if file exists
  set_fact:
    docker_daemon: "{{ docker_daemon_file.stdout | from_json }}"
  when: p.stat.exists

- name: set docker_daemon as empty dictionary if file doesn't exist
  set_fact:
    docker_daemon: {}
  when: not p.stat.exists

- name: check if insecure-registries key is already in file
  set_fact:
    has_insecure_registries: True
  when: "'insecure-registries' in docker_daemon"

- name: set insecure-registries to value from file it it exists
  set_fact:
    insecure_registries: "{{ docker_daemon['insecure-registries'] }}"
  when: has_insecure_registries is defined

- name: set insecure-registries to empty array if it doesn't exist
  set_fact:
    insecure_registries: []
  when: has_insecure_registries is undefined

- name: check if file update is needed
  set_fact:
    docker_daemon_update_needed: True
  when: "docker_registry not in insecure_registries"

- name: append docker registry to insecure-registries if it isn't already in
  set_fact:
    insecure_registries: "{{ insecure_registries + [docker_registry] }}"
  when: docker_daemon_update_needed is defined

- name: insert new insecure-registries to docker daemon
  set_fact:
    docker_daemon: "{{ docker_daemon | combine({ 'insecure-registries': insecure_registries}) }}"
  when: docker_daemon_update_needed is defined

- name: create /etc/docker directory
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  when: docker_daemon_update_needed is defined

- name: create empty /etc/docker/daemon.json is it doesn't exist
  copy:
    content: ""
    dest: /etc/docker/daemon.json
  when: not p.stat.exists

- name: empty existing file
  copy:
    content: ""
    dest: /etc/docker/daemon.json
  when: docker_daemon_update_needed is defined

- name: write to /etc/docker/daemon.json
  lineinfile:
    dest: /etc/docker/daemon.json
    line: "{{ docker_daemon | to_nice_json }}"
  when: docker_daemon_update_needed is defined

- name: reload systemd
  shell: systemctl daemon-reload
  when:
    - ansible_os_family == 'RedHat'
    - docker_daemon_update_needed is defined

- name: start docker daemon
  service:
    enabled: yes
    name: docker
    state: restarted
  when:
    - docker_daemon_update_needed is defined

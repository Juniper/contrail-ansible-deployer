---
- name: create /etc/contrail/webui
  file:
    path: /etc/contrail/webui
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_webui.env stat"
  stat:
    path: "/etc/contrail/common_webui.env"
  register: st

- name: "delete /etc/contrail/common_webui.env if exists"
  file:
    path: "/etc/contrail/common_webui.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_webui.env"
  file:
    path: "/etc/contrail/common_webui.env"
    state: touch

- name: "populate cluster wide common_webui.env"
  lineinfile: dest=/etc/contrail/common_webui.env regexp='.*{{ item.key }}$' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"

- name: "populate pod specific common_webui.env"
  lineinfile: dest=/etc/contrail/common_webui.env regexp='.*{{ config_item.key }}$' line="{{ config_item.key }}={{ config_item.value }}" state=present
  with_dict: "{{ roles[inventory_hostname].control }}"
  loop_control:
    loop_var: config_item
  ignore_errors: yes

- name: update image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-controller-webui-web
    - contrail-controller-webui-job
  when: UPDATE_IMAGES is undefined or UPDATE_IMAGES != false

- name: "create contrail webui compose file"
  template:
    src: contrail-webui.yaml.j2
    dest: "/etc/contrail/webui/docker-compose.yaml"

- name: "start contrail webui"
  docker_service:
    project_src: /etc/contrail/webui

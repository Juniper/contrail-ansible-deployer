---
- name: create /etc/contrail/vrouter
  file:
    path: /etc/contrail/vrouter
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_vrouter.env stat"
  stat:
    path: "/etc/contrail/common_vrouter.env"
  register: st

- name: "delete /etc/contrail/common_vrouter.env if exists"
  file:
    path: "/etc/contrail/common_vrouter.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_vrouter.env"
  file:
    path: "/etc/contrail/common_vrouter.env"
    state: touch

- name: "populate cluster wide common_vrouter.env"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='.*{{ item.key }}$' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"

- name: "populate pod specific common_vrouter.env"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='.*{{ config_item.key }}$' line="{{ config_item.key }}={{ config_item.value }}" state=present
  with_dict: "{{ roles[inventory_hostname].vrouter }}"
  loop_control:
    loop_var: config_item
  ignore_errors: yes

- name: get pop
  set_fact:
    pop: "{{ roles[inventory_hostname].vrouter.location }}"
  when: roles[inventory_hostname].vrouter.location is defined

- name: "populate pop settings"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='.*{{ pop_config.key }}$' line="{{ pop_config.key }}={{ pop_config.value }}" state=present
  with_dict: "{{ remote_locations[pop] }}"
  loop_control:
    loop_var: pop_config
  when: pop is defined

- name: calculate XMPP port if not assigned
  set_fact:
    xmpp_port: "{{ remote_locations[pop].CLUSTER_ID|int + 15268 }}"
  when: pop is defined and remote_locations[pop].XMPP_SERVER_PORT is undefined

- name: set XMPP_SERVER_PORT port if assigned
  set_fact:
    xmpp_port: "{{ remote_locations[pop].XMPP_SERVER_PORT }}"
  when: pop is defined and remote_locations[pop].XMPP_SERVER_PORT is defined

- name: "populate xmpp port"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='.*XMPP_SERVER_PORT$' line="XMPP_SERVER_PORT={{ xmpp_port }}" state=present
  when: xmpp_port is defined

- name: update image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-nodemgr
    - contrail-vrouter-kernel-init
    - contrail-vrouter-agent
  when: UPDATE_IMAGES is undefined or UPDATE_IMAGES != false

- name: "create contrail vrouter compose file"
  template:
    src: contrail-vrouter.yaml.j2
    dest: "/etc/contrail/vrouter/docker-compose.yaml"

- name: "start contrail vrouter"
  docker_service:
    project_src: /etc/contrail/vrouter

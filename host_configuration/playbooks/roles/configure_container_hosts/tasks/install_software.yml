---
- name: install epel
  yum:
    name: epel-release
    state: latest

- name: install ntpd
  yum:
    name: ntp
    state: latest

- name: set ntp server
  template:
    src: ntp.conf.j2
    dest: /etc/ntp.conf

- name: initial time sync
  shell: "ntpdate {{ CONTAINER_VM_CONFIG.network.ntpserver }}"
  ignore_errors: yes

- name: start ntp service
  service: name=ntpd state=started enabled=yes

- name: install pip
  yum:
    name: python-pip
    state: latest

- name: create docker repo
  yum_repository:
    name: dockerrepo
    description: Docker Repository
    baseurl: https://yum.dockerproject.org/repo/main/centos/7
    gpgkey: https://yum.dockerproject.org/gpg
    gpgcheck: yes

- name: install docker selinux
  yum:
    name: docker-engine-selinux-17.03.1.ce
    state: installed

- name: install docker
  yum:
    name: docker-engine-17.03.1.ce
    state: installed

- name: add insecure registry
  include: insecure_registry.yaml
  when: REGISTRY_PRIVATE_INSECURE is defined and REGISTRY_PRIVATE_INSECURE == true

- name: add private registry
  include: private_registry.yaml
  when: REGISTRY_PRIVATE_SECURE is defined and REGISTRY_PRIVATE_SECURE == true

- name: start docker daemon
  service:
    enabled: yes
    name: docker
    state: started

- name: get docker compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.17.0/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 0777

- name: install python compose
  pip:
    name: docker-compose==1.9.0

#- name: "Build hosts file"
#  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ item }} {{ item.replace('.','-') }}.{{ hostvars[groups['hypervisors'][0]].CONTAINER_VM_CONFIG.network.domainsuffix }} {{ item.replace('.','-') }}" state=present
#  with_items: "{{ hostvars[inventory_hostname].groups.container_hosts }}"

- name: create log file directory
  file:
   dest: /var/log/docker/contrail
   state: directory
   mode: 0777

- name: create k8s repo
  yum_repository:
    name: Kubernetes
    description: k8s repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    repo_gpgcheck: yes
    gpgcheck: yes

- name: install kubelet-1.9.2-0
  yum:
    name: kubelet-1.9.2-0
    state: latest

- name: install kubeadm-1.9.2-0
  yum:
    name: kubeadm-1.9.2-0
    state: latest

- name: install kubectl-1.9.2-0
  yum:
    name: kubectl-1.9.2-0
    state: latest

- name: set selinux to permissive
  selinux:
    policy: targeted
    state: permissive

- name: sysctl -w net.bridge.bridge-nf-call-iptables=1
  shell: sysctl -w net.bridge.bridge-nf-call-iptables=1 && echo "net.bridge.bridge-nf-call-iptables=1" >> /etc/sysctl.conf

- name: sysctl -w net.bridge.bridge-nf-call-ip6tables=1
  shell: sysctl -w net.bridge.bridge-nf-call-ip6tables=1 && echo "net.bridge.bridge-nf-call-ip6tables=1" >> /etc/sysctl.conf

- name: set firewall service name
  set_fact:
    firewall_svc_name: "{{ 'ufw' if ansible_os_family == 'Debian' else 'firewalld' }}"

- name: stop and disable firewall service
  service:
    name: "{{ firewall_svc_name }}"
    state: stopped
    enabled: no
  ignore_errors: yes

- name: flush iptables
  shell: iptables -F
  ignore_errors: yes

- name: accept input
  shell: iptables -P INPUT ACCEPT
  ignore_errors: yes

- name: accept forward
  shell: iptables -P FORWARD ACCEPT
  ignore_errors: yes
